---
title: "🎧 Vibe Coding My Portfolio"
author: "Lydia Hsu"
date: "2025-04-15"
categories: [Vibe Coding, Prompt Engineering, Dev Workflow]
image: "../images/posts/vibecoding.jpg"
description: "How I built my portfolio site using vibe coding: an AI-assisted, prompt-powered approach."
format:
  html:
    code-fold: false
    code-tools: false
execute:
  echo: true
  output: true
  warning: true
  error: true
engine: knitr
---

## 🎧 What *Is* Vibe Coding?{.no-anchor}

Coined by Andrej Karpathy in 2025, **vibe coding** is a new style of AI-assisted development where you co-create software through natural language prompts.  
You describe what you want — layout, logic, behavior — and let the AI generate most of the code. Your role becomes guiding, reviewing, and refining.  

It's fast. It's iterative. And when you're in the zone, it's incredibly fun.



## 🛠️ How I Vibe-Coded This Portfolio{.no-anchor}

When I set out to build this site with **Quarto**, I fully embraced vibe coding — powered by **Cursor**, an AI-first code editor that made the experience even smoother. Here’s how I turned ideas into reality.

### 🎨 Starting with Style{.no-anchor}

Before writing a single line of prompt, I first picked a color palette and visual style that felt right: clean, playful, and pastel-toned.  
This upfront design choice gave me a clear target to guide the vibe of every prompt I wrote.

### 🔁 From Prompt to Preview{.no-anchor}

With the style in mind, I fed Cursor detailed prompts like:

> "Create a responsive Quarto page with a two-column layout: left for project cards, right for an About Me section. Add a sticky navbar."

In response, the AI generated 100+ lines of YAML and HTML.  
My role became:

- Cleaning up the structure
- Extracting inline CSS into a clean "custom.scss"
- Debugging Quarto-specific quirks

### ⚡ Instant Components{.no-anchor}

Using Cursor, I quickly scaffolded:

- A vibrant hero section
- A filterable project grid
- An interactive skills accordion

Then I fine-tuned layouts and interactivity using Quarto's chunk options, Bootstrap classes, and SCSS variables.

### ✏️ Rapid Theming with Prompts{.no-anchor}

To shape the visual identity further, I prompt-tuned with design intent:

> "Make the call-to-action button playful with a pastel palette and rounded corners."

This let me explore different design variants in minutes — no tedious manual CSS editing.



## 📚 Key Lessons Learned{.no-anchor}

| 💡 Lesson | Takeaway |
|-----------|----------|
| Prompting is a design skill | Clear, specific context = better AI output |
| AI isn't always right | Some hallucinated Quarto options needed manual fixes |
| Human + AI = magic | UX sense and technical intuition still matter |



## 🧩 Challenges I Hit (and How I Solved Them){.no-anchor}

| ❌ Challenge | ✅ Solution |
|--------------|------------|
| Code chunks broke layout | Used `freeze: true` and scoped JS imports |
| CSS conflicts | Consolidated class names, offloaded critical styles to `custom.scss` |
| Mixed audience (Product + Data) | Added skill filters and tabs for easy navigation |



## ✨ Why This Project Mattered{.no-anchor}

Building this site wasn't just technical — it was creative, almost meditative.  
It showed me that AI can enhance not just productivity, but also playfulness.  

This portfolio reflects who I am: a builder who loves clean data, smart design, and continuous learning.



## 🤝🏼 Let's Connect{.no-anchor}

If you're experimenting with AI-assisted portfolios, playing with Quarto, or exploring what vibe coding looks like — I’d love to hear your story.

Let’s swap prompts, share inspiration, or build a lo-fi coding playlist together.

[📬 Let’s chat](mailto:lydia.tzuchi@gmail.com){.btn .btn-primary}
