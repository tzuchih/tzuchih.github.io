{
  "hash": "2b4d24ef6d8b20fd358f659f78c22cca",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"🎧 Vibe Coding My Portfolio\"\nauthor: \"Lydia Hsu\"\ndate: \"2025-04-15\"\ncategories: [Vibe Coding, Prompt Engineering, Dev Workflow]\nimage: \"../images/posts/post1.jpg\"\ndescription: \"A step-by-step guide to installing and using Positron for desktop apps.\"\nformat:\n  html:\n    code-fold: false\n    code-tools: false\nexecute:\n  echo: true\n  output: true\n  warning: true\n  error: true\nengine: knitr\n---\n\n\n\n## 🎧 What *Is* Vibe Coding?{.no-anchor}\n\nCoined by Andrej Karpathy in 2025, **vibe coding** is a style of AI-assisted development where you co-create software through natural language prompts. You describe what you want — layout, logic, behavior — and let the AI generate most of the code. Your job becomes guiding, reviewing, and refining. It's fast. It's iterative. And it's incredibly fun when you're in the zone.\n\n---\n\n## 🛠️ How I Vibe-Coded This Portfolio{.no-anchor}\n\nWhen I set out to build this site using **Quarto**, I leaned into vibe coding to bring my ideas to life. Here's how I used prompts + AI to accelerate the entire process.\n\n### 🔁 Prompt → Preview Loops{.no-anchor}\n\nI gave the AI detailed prompts like:\n\nPrompt: \"Create a responsive Quarto page with a two-column layout:\nLeft side for project cards, right side for an About Me section. Add a sticky navbar.\"\n\nThe AI returned 100+ lines of YAML and HTML. My role was to:\n\n- Clean up the structure\n- Extract inline CSS into a custom.scss file\n- Debug Quarto-specific syntax quirks\n\n### ⚡ Instant Components{.no-anchor}\n\nI used AI to scaffold:\n\n- A vibrant hero section\n- A filterable project grid\n- An interactive skills accordion\n\nI customized the layout and interactivity using Quarto's chunk options, Bootstrap classes, and SCSS variables.\n\n### 🎨 Rapid Theming{.no-anchor}\n\nTo refine the visual identity of my site, I prompt-tuned with design intent:\n\nPrompt: \"Make the call-to-action button playful with a pastel palette and rounded corners\"\n\nThis let me explore multiple design variants in minutes without rewriting all the CSS by hand.\n\n## 📚 What I Learned{.no-anchor}\n\n| 💡 Lesson | Takeaway |\n|-----------|----------|\n| Prompting is a design skill | Clear context = better code, faster iterations |\n| AI isn't always right | Some hallucinated Quarto options needed manual corrections |\n| Human + AI = best results | Final polish still relies on UX sense and technical intuition |\n\n## 🧩 Challenges I Faced (and Solved){.no-anchor}\n\n| ❌ Problem | ✅ Solution |\n|-----------|----------|\n| Code chunks broke layout | Used freeze: true and scoped JS imports carefully |\n| Conflicting CSS | Merged class names and offloaded critical styles to custom.scss |\n| Mixed audience (Product + Data) | Added filters and tabs to highlight both skill sets separately |\n\n## ✨ Why It Mattered{.no-anchor}\n\nBuilding this site wasn't just a technical challenge — it was a creative flow state.\n\nIt reminded me how AI can boost not only productivity, but also playfulness in the process. This portfolio reflects who I am: a builder who loves clean data, smart design, and continuous learning.\n\n## 🤝 Let's Connect{.no-anchor}\n\nIf you're working on your own AI-assisted portfolio, playing with Quarto, or just exploring what vibe coding looks like in real life — I'd love to hear your story.\nLet's swap prompts, inspiration, or lo-fi playlists.\n\n[📬 Let’s chat](mailto:lydia.tzuchi@gmail.com){.btn .btn-primary}",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}